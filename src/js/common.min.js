
document.addEventListener(
	"DOMContentLoaded", () => {
		function loadData() {
	return new Promise((resolve, reject) => {
	  	// setTimeout не является частью решения
	  	// Код ниже должен быть заменен на логику подходящую для решения вашей задачи
		setTimeout(resolve, 100);
	})
};

loadData()
	.then(() => {
		let preloaderEl = document.getElementById('preloader');
		preloaderEl.classList.add('hidden');
		preloaderEl.classList.remove('visible');
	});if (document.querySelector('.js-burger')) {

    const btnBurger = document.querySelectorAll('.js-burger');

    // Открыть / закрыть бургер по клику на него
    function btnBurgerToggle(e) {
        e.target.classList.toggle('toggle');
    }

    btnBurger.forEach(element => {
        element.addEventListener("click", btnBurgerToggle);
        // window.addEventListener("resize", btnBurgerToggleClassRemove);
    });
}const headerFixed = () => {
    const header = document.querySelector('.header');
    const heightHeader = header.offsetHeight; // высота хедера
    let posTop = window.pageYOffset; // позиция прокрутки
    console.log(posTop);

    if (posTop > 0) {
        header.classList.add('active');
        header.parentElement.style.paddingTop = heightHeader + 'px';
    } else {
        header.classList.remove('active');
        header.parentElement.style.paddingTop = 'inherit';
    };
};

headerFixed();
// запускаем headerFixed при ресайзе
window.addEventListener("resize", headerFixed);
window.addEventListener('scroll', headerFixed);if (document.querySelector('.jsMobileMenuBtnToggle')) {

	const body = document.querySelector('body');
	const menuBtn = document.querySelector('.jsMobileMenuBtnToggle');
	const menu = document.querySelector('.mobile-menu');
	const menuLink = document.querySelectorAll('.menu-link');

	function closeMenu() {
		menuBtn.classList.remove('toggle');
		menu.classList.remove('toggle');
		body.classList.remove('toggle');
	}

	// Показать / скрыть мобильное меню
	function menuToggle() {
		if (menuBtn.classList.contains('toggle')) {
			menu.classList.add('toggle');
			body.classList.add('toggle');
		} else {
			menu.classList.remove('toggle');
			body.classList.remove('toggle');
		};

		window.addEventListener('resize', function () {
			closeMenu();
		}, true);
	};

	// Определяем высоту мобильного меню и размещаем под шапкой
	function positionMobileMenu() {
		const heightViewport = document.documentElement.clientHeight;
		const heightHeader = document.querySelector('.header').offsetHeight;
		const heightMenuOverlay = heightViewport - heightHeader;
		let posTop = window.pageYOffset;

		const menuActive = document.querySelector('.mobile-menu.toggle');

		if (menuActive) {
			menuActive.style.height = heightMenuOverlay + 'px';
			menuActive.style.top = posTop + heightHeader + 'px';
		};
	};

	// Закрываем мобильное меню по клику вне его
	function closeMobileMenu() {
		document.addEventListener("click", function (e) {
			const target = e.target;
			const its_menu = target == menu || menu.contains(target);
			const its_btnMenu = target == menuBtn;

			if (!its_menu && !its_btnMenu) {
				closeMenu();
			};
		});
	};

	menuBtn.addEventListener("click", menuToggle);
	menuBtn.addEventListener("click", positionMobileMenu);
	closeMobileMenu();

	menuLink.forEach(element => {
		element.addEventListener("click", closeMenu);
	});

};


// Плавный скролл до блока с учетом высоты фисированной шапки
document.querySelectorAll('a.menu-link[href^="#"]').forEach(link => {

	link.addEventListener('click', function (e) {
		e.preventDefault();

		let href = this.getAttribute('href').substring(1);

		// Будем учитывать высоту шапки сайта при прокрутке на медиа <= 992, когда шапка фиксируется
		let heightHeader;
		if (document.documentElement.clientWidth <= 992) {
			heightHeader = document.querySelector('.header').offsetHeight;
		} else {
			heightHeader = 0;
		}

		const scrollTarget = document.getElementById(href);
		const elementPosition = scrollTarget.getBoundingClientRect().top;
		const offsetPosition = elementPosition - heightHeader;

		window.scrollBy({
			top: offsetPosition,
			behavior: 'smooth'
		});
	});
});// -include './myscripts/form.js'
		// Инициализация слайдера swiper
// https://swiperjs.com/

function initSwiper() {

	if (document.querySelector('.jsReviewsSlider')) {
		const jsReviewsSlider = new Swiper('.jsReviewsSlider', {
			spaceBetween: 10,
			slidesPerView: 1,
			autoHeight: false,
			loop: true,

			breakpoints: {
				769: {
					slidesPerView: 2,
					spaceBetween: 20,
					loop: true,
				},
			},

			pagination: {
				el: ".reviews-pagination",
			},

			navigation: {
				nextEl: ".reviews__next",
				prevEl: ".reviews__prev",
			},
		});
	};

	if (document.querySelector('.jsAdvantagesSlider')) {
		const jsReviewsSlider = new Swiper('.jsAdvantagesSlider', {
			spaceBetween: 20,
			slidesPerView: 1,
			autoHeight: false,
			loop: true,

			breakpoints: {
				993: {
					slidesPerView: 3,
					spaceBetween: 20,
					loop: false,
				},
			},

			pagination: {
				el: ".advantages-pagination",
			},

			navigation: {
				nextEl: ".advantages__next",
				prevEl: ".advantages__prev",
			},
		});
	};

	if (document.querySelector('.jsCasesSlider')) {
		const jsReviewsSlider = new Swiper('.jsCasesSlider', {
			spaceBetween: 20,
			slidesPerView: 1,
			autoHeight: false,
			loop: true,

			navigation: {
				nextEl: ".cases__next",
				prevEl: ".cases__prev",
			},
		});
	};
};

// window.addEventListener("resize", initSwiper);
window.addEventListener("resize", function () {
	initSwiper();
});

initSwiper();


const accordeonItems = document.querySelectorAll('.accordeon-title'); // Все заголовки элементов аккордиона, по которым щелкаем для открытия / закрытия контента выбранного элемента
const accordeonItemsContent = document.querySelectorAll('.accordeon-descr'); // Контент всех элементов аккордиона, который открывается, закрывается

// Перебираем заголовки аккордеона, по которым можем щелкнуть
accordeonItems.forEach((element, index) => {
	// Вешаем событие клика на каждый заголовок аккордеона
	element.addEventListener('click', function () {

		// Если у элемента, по которому щелкнули, нет класса активности,
		// if (!accordeonItems[index].classList.contains('accordeon__title--active')) {

		// 	// Пробегаемся по заголовкам элементов аккордеона
		// 	accordeonItems.forEach(element => {
		// 		// удаляем класс активности
		// 		element.classList.remove('accordeon__title--active');
		// 	});

		// 	// Перебираем контент для айтемов аккордиона и скрываем.
		// 	accordeonItemsContent.forEach(element => {
		// 		element.classList.add('accordeon__content--hidden');
		// 	});
		// };

		// Переключаем класс активности элемента, по которому щелкнули
		accordeonItems[index].classList.toggle('toggle');

		// Делаем тоггл для контета элемента, по которому щелкнули
		accordeonItemsContent[index].classList.toggle('toggle');

	});
});// Табы имеют сложную верстку. При клике на кноку таба, у него будут меняться картинка, заголовок, описание, галерея. Причем эти элементы могут не лежать в одной обертке.
const tabsBtn = document.querySelectorAll('.tab-btn-item'); // кнопки табов
const tabsContentItem = document.querySelectorAll('.tabs-content-item'); // текст табов

// Перебираем кнопки табов, по которым можем щелкнуть
tabsBtn.forEach((btn, index) => {
	// Вешаем событие клика на каждую кнопку
	btn.addEventListener('click', function () {
		// Если у кнопки, по которой щелкнули, нет класса активности,
		if (!btn.classList.contains('toggle')) {

			// Пробегаемся по кнопкам
			tabsBtn.forEach(element => {
				// удаляем класс активности
				element.classList.remove('toggle');
				element.classList.add('btn--transparent');
			});

			// Добавляем класс активности на нажатую кнопку
			tabsBtn[index].classList.add('toggle');
			tabsBtn[index].classList.remove('btn--transparent');

			// Пробегаемся по текстам табов
			tabsContentItem.forEach(element => {
				// удаляем класс активности
				element.classList.remove('toggle');
			});

			// Добавляем класс активности на текст таба
			tabsContentItem[index].classList.add('toggle');

		};
	});
});if (document.querySelector('.js-calc-one')) {

	const jsCalcOne = document.querySelector('.js-calc-one');
	const calcFormBtns = jsCalcOne.querySelectorAll('.calc-form__btn');

	let time, subscribers;

	// из кнопок с классом toogle получаем значения в переменные time и subscribers из дата-элементов
	function valueInit() {
		const calcFormBtnToogle = jsCalcOne.querySelectorAll('.toogle');

		for (let index = 0; index < calcFormBtnToogle.length; index++) {

			if (calcFormBtnToogle[index].getAttribute('data-type') == "time") {
				time = calcFormBtnToogle[index].getAttribute('data-value');
			};

			if (calcFormBtnToogle[index].getAttribute('data-type') == "subscribers") {
				subscribers = calcFormBtnToogle[index].getAttribute('data-value');
			};

		};
	};

	valueInit();

	// показываем стоимость в зависимости от значений полученных переменных
	function showCost() {
		let price;
		const calcTarifsItem = 'time-' + time + '-subscribers-' + subscribers;
		price = document.querySelector('[data-value="' + calcTarifsItem + '"]').getAttribute('data-price');
		price += '₽';
		document.querySelector('.js-price-subscribers').textContent = price;
	};

	// при клике на любой label у соседей убираем класс активности, а у самого элемента добавляем класс активности
	for (let i = 0; i < calcFormBtns.length; i++) {
		calcFormBtns[i].addEventListener("click", function(e) {
			const dataType = e.target.getAttribute('data-type');

			for (let j = 0; j < calcFormBtns.length; j++) {
				if (calcFormBtns[j].getAttribute('data-type') == dataType) {
					calcFormBtns[j].classList.remove('toogle');
				}
			};

			e.target.classList.add('toogle');
			valueInit();
			showCost();
		});
	};

};

if (document.querySelector('.js-calc-two')) {

	const jsCalcTwo = document.querySelector('.js-calc-two');
	const calcFormBtns = jsCalcTwo.querySelectorAll('.calc-form__btn');

	let dataPrice

	// из кнопок с классом toogle получаем значения в переменные time и subscribers из дата-элементов
	function valueInit() {
		const calcFormBtnToogle = jsCalcTwo.querySelector('.toogle');

		dataPrice = calcFormBtnToogle.getAttribute('data-price');
	};

	valueInit();

	// показываем стоимость в зависимости от значений полученных переменных
	function showCost() {
		let price;

		price = dataPrice + ' ₽';
		document.querySelector('.js-price-letters').textContent = price;
	};

	// при клике на любой label у соседей убираем класс активности, а у самого элемента добавляем класс активности
	for (let i = 0; i < calcFormBtns.length; i++) {
		calcFormBtns[i].addEventListener("click", function(e) {
			const dataType = e.target.getAttribute('data-type');

			for (let j = 0; j < calcFormBtns.length; j++) {
				if (calcFormBtns[j].getAttribute('data-type') == dataType) {
					calcFormBtns[j].classList.remove('toogle');
				}
			};

			e.target.classList.add('toogle');
			valueInit();
			showCost();
		});
	};

};// -include './myscripts/blazy-init.js'
	}
);
