
document.addEventListener(
	"DOMContentLoaded", () => {
		function loadData() {
	return new Promise((resolve, reject) => {
	  	// setTimeout не является частью решения
	  	// Код ниже должен быть заменен на логику подходящую для решения вашей задачи
		setTimeout(resolve, 100);
	})
};

loadData()
	.then(() => {
		let preloaderEl = document.getElementById('preloader');
		preloaderEl.classList.add('hidden');
		preloaderEl.classList.remove('visible');
	});if (document.querySelector('.js-burger')) {

    const btnBurger = document.querySelectorAll('.js-burger');

    // Открыть / закрыть бургер по клику на него
    function btnBurgerToggle(e) {
        e.target.classList.toggle('toggle');
    }

    // При ресайзе возвращаем кнопки в исходное состояние
    // function btnBurgerToggleClassRemove() {
    //     btnBurger.forEach(element => {
    //         element.classList.remove('toggle');
    //     });
    // }

    btnBurger.forEach(element => {
        element.addEventListener("click", btnBurgerToggle);
        // window.addEventListener("resize", btnBurgerToggleClassRemove);
    });
}

// по клику на .js-catalog-open-btn открываем / закрываем меню с категориями каталога
if (document.querySelector('.js-catalog-open-btn')) {
    const catalogOpenBtn = document.querySelectorAll('.js-catalog-open-btn');

    // Открыть / закрыть подменю по клику на .js-catalog-open-btn
    function toggleOpen(e) {

        const toggleBtn = (this.closest('.js-catalog-open-btn'));
        const toggleBody = toggleBtn.nextElementSibling;

        toggleBody.classList.toggle('toggle');
    }

    catalogOpenBtn.forEach(element => {
        element.addEventListener("click", toggleOpen);
        // window.addEventListener("resize", btnBurgerToggleClassRemove);
    });
}



// -include './myscripts/form.js'
		// Инициализация слайдера swiper
// https://swiperjs.com/

function initSwiper() {

	if (document.querySelector('.jsReviewsSlider')) {
		const jsReviewsSlider = new Swiper('.jsReviewsSlider', {
			spaceBetween: 10,
			slidesPerView: 1,
			autoHeight: false,
			loop: true,

			breakpoints: {
				769: {
					slidesPerView: 2,
					spaceBetween: 20,
					loop: true,
				},
			},

			navigation: {
				nextEl: ".reviews__next",
				prevEl: ".reviews__prev",
			},
		});
	};

	if (document.querySelector('.jsAdvantagesSlider')) {
		const jsReviewsSlider = new Swiper('.jsAdvantagesSlider', {
			spaceBetween: 20,
			slidesPerView: 1,
			autoHeight: false,
			loop: true,

			breakpoints: {
				992: {
					slidesPerView: 3,
					spaceBetween: 20,
					loop: false,
				},
			},

			pagination: {
				el: ".advantages-pagination",
			},

			navigation: {
				nextEl: ".advantages__next",
				prevEl: ".advantages__prev",
			},
		});
	};
};

// window.addEventListener("resize", initSwiper);
window.addEventListener("resize", function () {
	initSwiper();
});

initSwiper();


const accordeonItems = document.querySelectorAll('.accordeon-title'); // Все заголовки элементов аккордиона, по которым щелкаем для открытия / закрытия контента выбранного элемента
const accordeonItemsContent = document.querySelectorAll('.accordeon-descr'); // Контент всех элементов аккордиона, который открывается, закрывается

// Перебираем заголовки аккордеона, по которым можем щелкнуть
accordeonItems.forEach((element, index) => {
	// Вешаем событие клика на каждый заголовок аккордеона
	element.addEventListener('click', function () {

		// Если у элемента, по которому щелкнули, нет класса активности,
		// if (!accordeonItems[index].classList.contains('accordeon__title--active')) {

		// 	// Пробегаемся по заголовкам элементов аккордеона
		// 	accordeonItems.forEach(element => {
		// 		// удаляем класс активности
		// 		element.classList.remove('accordeon__title--active');
		// 	});

		// 	// Перебираем контент для айтемов аккордиона и скрываем.
		// 	accordeonItemsContent.forEach(element => {
		// 		element.classList.add('accordeon__content--hidden');
		// 	});
		// };

		// Переключаем класс активности элемента, по которому щелкнули
		accordeonItems[index].classList.toggle('toggle');

		// Делаем тоггл для контета элемента, по которому щелкнули
		accordeonItemsContent[index].classList.toggle('toggle');

	});
});// Табы имеют сложную верстку. При клике на кноку таба, у него будут меняться картинка, заголовок, описание, галерея. Причем эти элементы могут не лежать в одной обертке.
const tabsBtn = document.querySelectorAll('.tab-btn-item'); // кнопки табов
const tabsContentItem = document.querySelectorAll('.tabs-content-item'); // текст табов

// Перебираем кнопки табов, по которым можем щелкнуть
tabsBtn.forEach((btn, index) => {
	// Вешаем событие клика на каждую кнопку
	btn.addEventListener('click', function () {
		// Если у кнопки, по которой щелкнули, нет класса активности,
		if (!btn.classList.contains('toggle')) {

			// Пробегаемся по кнопкам
			tabsBtn.forEach(element => {
				// удаляем класс активности
				element.classList.remove('toggle');
				element.classList.add('btn--transparent');
			});

			// Добавляем класс активности на нажатую кнопку
			tabsBtn[index].classList.add('toggle');
			tabsBtn[index].classList.remove('btn--transparent');

			// Пробегаемся по текстам табов
			tabsContentItem.forEach(element => {
				// удаляем класс активности
				element.classList.remove('toggle');
			});

			// Добавляем класс активности на текст таба
			tabsContentItem[index].classList.add('toggle');

		};
	});
});if (document.querySelector('.js-calc-one')) {

	const jsCalcOne = document.querySelector('.js-calc-one');
	const labels = jsCalcOne.querySelectorAll('label');

	let time, subscribers;

	// из лейблов с классом toogle получаем значения в переменные time и subscribers из дочерних элементов из параметров value
	function valueInit() {
		const labelsToogle = jsCalcOne.querySelectorAll('.toogle');

		for (let index = 0; index < labelsToogle.length; index++) {

			const childrenEl = labelsToogle[index].querySelector('input');
			const childrenElName = childrenEl.getAttribute('name');

			if (childrenElName == 'time') {
				time = childrenEl.getAttribute('value');
			};

			if (childrenElName == 'subscribers') {
				subscribers = childrenEl.getAttribute('value');
			};

		};

		console.log(time + ' - ' + subscribers);
	};

	valueInit();

	// при клике на любой label у соседей убираем класс активности, а у самого элемента добавляем класс активности
	for (let index = 0; index < labels.length; index++) {
		labels[index].addEventListener("click", function(e) {
			const childrenEl = e.target.querySelector('input');
			const childrenElName = childrenEl.getAttribute('name');
			console.log(childrenElName);

			for (let index = 0; index < labels.length; index++) {
				if (labels[index].querySelector('input').getAttribute('name') == childrenElName) {
					labels[index].classList.remove('toogle');
				}
			};

			e.target.classList.add('toogle');
			valueInit();
		});
	};

	// window.addEventListener("resize", btnBurgerToggleClassRemove);
	// element.addEventListener("click", btnBurgerToggle);


	// Открыть / закрыть бургер по клику на него
	// function btnBurgerToggle(e) {
	//     e.target.classList.toggle('toggle');
	// }

	// При ресайзе возвращаем кнопки в исходное состояние
	// function btnBurgerToggleClassRemove() {
	//     btnBurger.forEach(element => {
	//         element.classList.remove('toggle');
	//     });
	// }


	// у всех соседей убрать класс активности
	// у элемента добавить класс активности
	// в зависимости от name дочернего элемента записать в переменную time или subscribers значение из
};// -include './myscripts/blazy-init.js'
	}
);
